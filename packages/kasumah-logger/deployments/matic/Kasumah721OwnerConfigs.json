{
  "address": "0xd16049C731E803A498DA75B6BD6C2412e0991490",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc721Contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        }
      ],
      "name": "latest",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc721Contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc721Contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "snapshotSlice",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "blockNumbers",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc721Contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "valueAt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x562ea322429fd11ea2626b98e60fe70e296803396b59a6e9f3b04fd20611822a",
  "receipt": {
    "to": null,
    "from": "0x672Bb635FFBea033e4b796Fbc054a1cAf009517A",
    "contractAddress": "0xd16049C731E803A498DA75B6BD6C2412e0991490",
    "transactionIndex": 66,
    "gasUsed": "760833",
    "logsBloom": "0x
    "blockHash": "0xc4ea9d9ee4836ee9c629dfaa2c4e2402c824bbf788f15b940820538648facc97",
    "transactionHash": "0x562ea322429fd11ea2626b98e60fe70e296803396b59a6e9f3b04fd20611822a",
    "logs": [
      {
        "transactionIndex": 66,
        "blockNumber": 18954320,
        "transactionHash": "0x562ea322429fd11ea2626b98e60fe70e296803396b59a6e9f3b04fd20611822a",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000672bb635ffbea033e4b796fbc054a1caf009517a",
          "0x0000000000000000000000007b5000af8ab69fd59eb0d4f5762bff57c9c04385"
        ],
        "data": "0x000000000000000000000000000000000000000000000000002ef4d1e333ab540000000000000000000000000000000000000000000000000d9a610f9585bdcc000000000000000000000000000000000000000000006a260e618d62679736fa0000000000000000000000000000000000000000000000000d6b6c3db2521278000000000000000000000000000000000000000000006a260e9082344acae24e",
        "logIndex": 881,
        "blockHash": "0xc4ea9d9ee4836ee9c629dfaa2c4e2402c824bbf788f15b940820538648facc97"
      }
    ],
    "blockNumber": 18954320,
    "cumulativeGasUsed": "16991205",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "05bcf2734bccacebd221db992bb90130",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc721Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"latest\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc721Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc721Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"snapshotSlice\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"blockNumbers\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc721Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"valueAt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"KasumahOwnerConfigs is a contract that lets the current owner of an 1155 set arbitrary key/value pairs for the asset. Warning here that for *fungible* 1155 tokens, *any* owner will be able to set the k/v pairs.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Kasumah721OwnerConfigs.sol\":\"Kasumah721OwnerConfigs\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to array types.\\n */\\nlibrary Arrays {\\n   /**\\n     * @dev Searches a sorted `array` and returns the first index that contains\\n     * a value greater or equal to `element`. If no such index exists (i.e. all\\n     * values in the array are strictly less than `element`), the array length is\\n     * returned. Time complexity O(log n).\\n     *\\n     * `array` is expected to be sorted in ascending order, and to contain no\\n     * repeated elements.\\n     */\\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\\n        if (array.length == 0) {\\n            return 0;\\n        }\\n\\n        uint256 low = 0;\\n        uint256 high = array.length;\\n\\n        while (low < high) {\\n            uint256 mid = Math.average(low, high);\\n\\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\\n            // because Math.average rounds down (it does integer division with truncation).\\n            if (array[mid] > element) {\\n                high = mid;\\n            } else {\\n                low = mid + 1;\\n            }\\n        }\\n\\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\\n        if (low > 0 && array[low - 1] == element) {\\n            return low - 1;\\n        } else {\\n            return low;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x415faff3ea57601e0d5ebb1f02b0b808a302f8b661ff08d6b4a00c0ee00fa57e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow, so we distribute\\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\\n    }\\n}\\n\",\"keccak256\":\"0xa1477864def7febd9826918e50482a1ee7068b337b03804a7e0e98c674ac57c2\",\"license\":\"MIT\"},\"contracts/Kasumah721OwnerConfigs.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@openzeppelin/contracts/utils/Arrays.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\n// import \\\"hardhat/console.sol\\\";\\n\\n/**\\n    @dev KasumahOwnerConfigs is a contract that lets the current owner of an 1155\\n    set arbitrary key/value pairs for the asset. Warning here that for *fungible*\\n    1155 tokens, *any* owner will be able to set the k/v pairs.\\n */\\ncontract Kasumah721OwnerConfigs is Context {\\n    using Arrays for uint256[];\\n\\n    mapping(bytes32 => uint256[]) private _keys; // hash of address/id/key -> snapshot\\n\\n    mapping(bytes32 => mapping(uint256 => bytes)) private _values;\\n\\n    function set(\\n        address erc721Contract,\\n        uint256 tokenID,\\n        string calldata key,\\n        bytes calldata value\\n    ) public {\\n        requireUserOwnerAndNFT(erc721Contract, tokenID);\\n        bytes32 hsh = hashKey(erc721Contract, tokenID, key);\\n        uint256 blockNumber = block.number;\\n        uint256[] storage snapshots = _keys[hsh];\\n        require(\\n            snapshots.length == 0 ||\\n                snapshots[snapshots.length - 1] < blockNumber,\\n            \\\"Key can only be set once per block\\\"\\n        );\\n        // console.log('pushing: ', blockNumber);\\n        snapshots.push(blockNumber);\\n        _values[hsh][blockNumber] = value;\\n    }\\n\\n    function latest(\\n        address erc721Contract,\\n        uint256 tokenID,\\n        string calldata key\\n    ) public view returns (bytes memory value) {\\n        return valueAt(erc721Contract, tokenID, key, block.number);\\n    }\\n\\n    function valueAt(\\n        address erc721Contract,\\n        uint256 tokenID,\\n        string calldata key,\\n        uint256 blockNumber\\n    ) public view returns (bytes memory value) {\\n        bytes32 hsh = hashKey(erc721Contract, tokenID, key);\\n        uint256 closest = _keys[hsh].findUpperBound(blockNumber);\\n        uint256[] storage snapshots = _keys[hsh];\\n        // console.log('bn, close', blockNumber, closest);\\n        if (closest == 0) {\\n            return _values[hsh][snapshots[0]];\\n        }\\n        if (closest == snapshots.length) {\\n            return _values[hsh][snapshots[closest - 1]];\\n        }\\n        uint256 snapID = snapshots[closest];\\n        if (snapID > blockNumber) {\\n            return _values[hsh][snapshots[closest - 1]];\\n        }\\n        return _values[hsh][snapID];\\n    }\\n\\n    function snapshotSlice(\\n        address erc721Contract,\\n        uint256 tokenID,\\n        string calldata key,\\n        uint256 start,\\n        uint256 length\\n    ) public view returns (uint256[] memory blockNumbers) {\\n        uint256[] storage snapshots = _keys[\\n            hashKey(erc721Contract, tokenID, key)\\n        ];\\n        for (uint256 i = 0; i < length; i++) {\\n            blockNumbers[i] = snapshots[i + start];\\n        }\\n        return blockNumbers;\\n    }\\n\\n    function requireUserOwnerAndNFT(address erc721Contract, uint256 tokenID)\\n        internal\\n        view\\n    {\\n        require(\\n            IERC721(erc721Contract).ownerOf(tokenID) == _msgSender(),\\n            \\\"Kasumah721OwnerConfigs#Ony an owner may set configs\\\"\\n        );\\n    }\\n\\n    function hashKey(\\n        address erc721Contract,\\n        uint256 tokenID,\\n        string calldata key\\n    ) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(erc721Contract, tokenID, key));\\n    }\\n}\\n\",\"keccak256\":\"0x4bffb792027513a8a8b96a6035970c45381b601ec437271aca5352451e98cd6b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610ccf806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806323ca2d1e1461005157806373f16da6146100665780637a967f6d1461008f578063ee4aaade146100af575b600080fd5b61006461005f366004610987565b6100c2565b005b610079610074366004610a10565b6101d1565b6040516100869190610b55565b60405180910390f35b6100a261009d366004610a72565b61050c565b6040516100869190610b11565b6100796100bd36600461092d565b6105b7565b6100cc86866105c6565b60006100da878787876106b9565b6000818152602081905260409020805491925043911580610133575080548290829061010890600190610bd4565b8154811061012657634e487b7160e01b600052603260045260246000fd5b9060005260206000200154105b61018f5760405162461bcd60e51b815260206004820152602260248201527f4b65792063616e206f6e6c7920626520736574206f6e63652070657220626c6f604482015261636b60f01b60648201526084015b60405180910390fd5b805460018181018355600083815260208082209093018590558581529082526040808220858352909252206101c5908686610831565b50505050505050505050565b606060006101e1878787876106b9565b6000818152602081905260408120919250906101fd90856106f2565b6000838152602081905260409020909150816102f5576001600084815260200190815260200160002060008260008154811061024957634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020805461026d90610beb565b80601f016020809104026020016040519081016040528092919081815260200182805461029990610beb565b80156102e65780601f106102bb576101008083540402835291602001916102e6565b820191906000526020600020905b8154815290600101906020018083116102c957829003601f168201915b50505050509350505050610503565b805482141561033a57600083815260016020819052604082209190839061031c9086610bd4565b8154811061024957634e487b7160e01b600052603260045260246000fd5b600081838154811061035c57634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508581111561045a57600084815260016020819052604082209190849061038f9087610bd4565b815481106103ad57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002080546103d190610beb565b80601f01602080910402602001604051908101604052809291908181526020018280546103fd90610beb565b801561044a5780601f1061041f5761010080835404028352916020019161044a565b820191906000526020600020905b81548152906001019060200180831161042d57829003601f168201915b5050505050945050505050610503565b60008481526001602090815260408083208484529091529020805461047e90610beb565b80601f01602080910402602001604051908101604052809291908181526020018280546104aa90610beb565b80156104f75780601f106104cc576101008083540402835291602001916104f7565b820191906000526020600020905b8154815290600101906020018083116104da57829003601f168201915b50505050509450505050505b95945050505050565b6060600080600061051f8a8a8a8a6106b9565b8152602001908152602001600020905060005b838110156105ab57816105458683610ba8565b8154811061056357634e487b7160e01b600052603260045260246000fd5b906000526020600020015483828151811061058e57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152806105a381610c26565b915050610532565b50509695505050505050565b606061050385858585436101d1565b336040516331a9108f60e11b8152600481018390526001600160a01b0391821691841690636352211e9060240160206040518083038186803b15801561060b57600080fd5b505afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190610911565b6001600160a01b0316146106b55760405162461bcd60e51b815260206004820152603360248201527f4b6173756d61683732314f776e6572436f6e66696773234f6e7920616e206f776044820152726e6572206d61792073657420636f6e6669677360681b6064820152608401610186565b5050565b6000848484846040516020016106d29493929190610ade565b604051602081830303815290604052805190602001209050949350505050565b8154600090610703575060006107cd565b82546000905b8082101561076d57600061071d83836107d3565b90508486828154811061074057634e487b7160e01b600052603260045260246000fd5b9060005260206000200154111561075957809150610767565b610764816001610ba8565b92505b50610709565b6000821180156107b057508385610785600185610bd4565b815481106107a357634e487b7160e01b600052603260045260246000fd5b9060005260206000200154145b156107c9576107c0600183610bd4565b925050506107cd565b5090505b92915050565b600060026107e18184610c41565b6107ec600286610c41565b6107f69190610ba8565b6108009190610bc0565b61080b600284610bc0565b610816600286610bc0565b6108209190610ba8565b61082a9190610ba8565b9392505050565b82805461083d90610beb565b90600052602060002090601f01602090048101928261085f57600085556108a5565b82601f106108785782800160ff198235161785556108a5565b828001600101855582156108a5579182015b828111156108a557823582559160200191906001019061088a565b506108b19291506108b5565b5090565b5b808211156108b157600081556001016108b6565b60008083601f8401126108db578182fd5b50813567ffffffffffffffff8111156108f2578182fd5b60208301915083602082850101111561090a57600080fd5b9250929050565b600060208284031215610922578081fd5b815161082a81610c81565b60008060008060608587031215610942578283fd5b843561094d81610c81565b935060208501359250604085013567ffffffffffffffff81111561096f578283fd5b61097b878288016108ca565b95989497509550505050565b6000806000806000806080878903121561099f578182fd5b86356109aa81610c81565b955060208701359450604087013567ffffffffffffffff808211156109cd578384fd5b6109d98a838b016108ca565b909650945060608901359150808211156109f1578384fd5b506109fe89828a016108ca565b979a9699509497509295939492505050565b600080600080600060808688031215610a27578081fd5b8535610a3281610c81565b945060208601359350604086013567ffffffffffffffff811115610a54578182fd5b610a60888289016108ca565b96999598509660600135949350505050565b60008060008060008060a08789031215610a8a578182fd5b8635610a9581610c81565b955060208701359450604087013567ffffffffffffffff811115610ab7578283fd5b610ac389828a016108ca565b979a9699509760608101359660809091013595509350505050565b6bffffffffffffffffffffffff198560601b16815283601482015281836034830137600091016034019081529392505050565b6020808252825182820181905260009190848201906040850190845b81811015610b4957835183529284019291840191600101610b2d565b50909695505050505050565b6000602080835283518082850152825b81811015610b8157858101830151858201604001528201610b65565b81811115610b925783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610bbb57610bbb610c55565b500190565b600082610bcf57610bcf610c6b565b500490565b600082821015610be657610be6610c55565b500390565b600181811c90821680610bff57607f821691505b60208210811415610c2057634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610c3a57610c3a610c55565b5060010190565b600082610c5057610c50610c6b565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b0381168114610c9657600080fd5b5056fea264697066735822122001c0f33b1695fa098b0d28e643a3908ed999b9af4573f6d008cadfc55444fad164736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806323ca2d1e1461005157806373f16da6146100665780637a967f6d1461008f578063ee4aaade146100af575b600080fd5b61006461005f366004610987565b6100c2565b005b610079610074366004610a10565b6101d1565b6040516100869190610b55565b60405180910390f35b6100a261009d366004610a72565b61050c565b6040516100869190610b11565b6100796100bd36600461092d565b6105b7565b6100cc86866105c6565b60006100da878787876106b9565b6000818152602081905260409020805491925043911580610133575080548290829061010890600190610bd4565b8154811061012657634e487b7160e01b600052603260045260246000fd5b9060005260206000200154105b61018f5760405162461bcd60e51b815260206004820152602260248201527f4b65792063616e206f6e6c7920626520736574206f6e63652070657220626c6f604482015261636b60f01b60648201526084015b60405180910390fd5b805460018181018355600083815260208082209093018590558581529082526040808220858352909252206101c5908686610831565b50505050505050505050565b606060006101e1878787876106b9565b6000818152602081905260408120919250906101fd90856106f2565b6000838152602081905260409020909150816102f5576001600084815260200190815260200160002060008260008154811061024957634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020805461026d90610beb565b80601f016020809104026020016040519081016040528092919081815260200182805461029990610beb565b80156102e65780601f106102bb576101008083540402835291602001916102e6565b820191906000526020600020905b8154815290600101906020018083116102c957829003601f168201915b50505050509350505050610503565b805482141561033a57600083815260016020819052604082209190839061031c9086610bd4565b8154811061024957634e487b7160e01b600052603260045260246000fd5b600081838154811061035c57634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508581111561045a57600084815260016020819052604082209190849061038f9087610bd4565b815481106103ad57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002080546103d190610beb565b80601f01602080910402602001604051908101604052809291908181526020018280546103fd90610beb565b801561044a5780601f1061041f5761010080835404028352916020019161044a565b820191906000526020600020905b81548152906001019060200180831161042d57829003601f168201915b5050505050945050505050610503565b60008481526001602090815260408083208484529091529020805461047e90610beb565b80601f01602080910402602001604051908101604052809291908181526020018280546104aa90610beb565b80156104f75780601f106104cc576101008083540402835291602001916104f7565b820191906000526020600020905b8154815290600101906020018083116104da57829003601f168201915b50505050509450505050505b95945050505050565b6060600080600061051f8a8a8a8a6106b9565b8152602001908152602001600020905060005b838110156105ab57816105458683610ba8565b8154811061056357634e487b7160e01b600052603260045260246000fd5b906000526020600020015483828151811061058e57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152806105a381610c26565b915050610532565b50509695505050505050565b606061050385858585436101d1565b336040516331a9108f60e11b8152600481018390526001600160a01b0391821691841690636352211e9060240160206040518083038186803b15801561060b57600080fd5b505afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190610911565b6001600160a01b0316146106b55760405162461bcd60e51b815260206004820152603360248201527f4b6173756d61683732314f776e6572436f6e66696773234f6e7920616e206f776044820152726e6572206d61792073657420636f6e6669677360681b6064820152608401610186565b5050565b6000848484846040516020016106d29493929190610ade565b604051602081830303815290604052805190602001209050949350505050565b8154600090610703575060006107cd565b82546000905b8082101561076d57600061071d83836107d3565b90508486828154811061074057634e487b7160e01b600052603260045260246000fd5b9060005260206000200154111561075957809150610767565b610764816001610ba8565b92505b50610709565b6000821180156107b057508385610785600185610bd4565b815481106107a357634e487b7160e01b600052603260045260246000fd5b9060005260206000200154145b156107c9576107c0600183610bd4565b925050506107cd565b5090505b92915050565b600060026107e18184610c41565b6107ec600286610c41565b6107f69190610ba8565b6108009190610bc0565b61080b600284610bc0565b610816600286610bc0565b6108209190610ba8565b61082a9190610ba8565b9392505050565b82805461083d90610beb565b90600052602060002090601f01602090048101928261085f57600085556108a5565b82601f106108785782800160ff198235161785556108a5565b828001600101855582156108a5579182015b828111156108a557823582559160200191906001019061088a565b506108b19291506108b5565b5090565b5b808211156108b157600081556001016108b6565b60008083601f8401126108db578182fd5b50813567ffffffffffffffff8111156108f2578182fd5b60208301915083602082850101111561090a57600080fd5b9250929050565b600060208284031215610922578081fd5b815161082a81610c81565b60008060008060608587031215610942578283fd5b843561094d81610c81565b935060208501359250604085013567ffffffffffffffff81111561096f578283fd5b61097b878288016108ca565b95989497509550505050565b6000806000806000806080878903121561099f578182fd5b86356109aa81610c81565b955060208701359450604087013567ffffffffffffffff808211156109cd578384fd5b6109d98a838b016108ca565b909650945060608901359150808211156109f1578384fd5b506109fe89828a016108ca565b979a9699509497509295939492505050565b600080600080600060808688031215610a27578081fd5b8535610a3281610c81565b945060208601359350604086013567ffffffffffffffff811115610a54578182fd5b610a60888289016108ca565b96999598509660600135949350505050565b60008060008060008060a08789031215610a8a578182fd5b8635610a9581610c81565b955060208701359450604087013567ffffffffffffffff811115610ab7578283fd5b610ac389828a016108ca565b979a9699509760608101359660809091013595509350505050565b6bffffffffffffffffffffffff198560601b16815283601482015281836034830137600091016034019081529392505050565b6020808252825182820181905260009190848201906040850190845b81811015610b4957835183529284019291840191600101610b2d565b50909695505050505050565b6000602080835283518082850152825b81811015610b8157858101830151858201604001528201610b65565b81811115610b925783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610bbb57610bbb610c55565b500190565b600082610bcf57610bcf610c6b565b500490565b600082821015610be657610be6610c55565b500390565b600181811c90821680610bff57607f821691505b60208210811415610c2057634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610c3a57610c3a610c55565b5060010190565b600082610c5057610c50610c6b565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b0381168114610c9657600080fd5b5056fea264697066735822122001c0f33b1695fa098b0d28e643a3908ed999b9af4573f6d008cadfc55444fad164736f6c63430008040033",
  "devdoc": {
    "details": "KasumahOwnerConfigs is a contract that lets the current owner of an 1155 set arbitrary key/value pairs for the asset. Warning here that for *fungible* 1155 tokens, *any* owner will be able to set the k/v pairs.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 447,
        "contract": "contracts/Kasumah721OwnerConfigs.sol:Kasumah721OwnerConfigs",
        "label": "_keys",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 453,
        "contract": "contracts/Kasumah721OwnerConfigs.sol:Kasumah721OwnerConfigs",
        "label": "_values",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))"
      }
    ],
    "types": {
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(uint256 => bytes))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bytes_storage)"
      },
      "t_mapping(t_uint256,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}