{
  "address": "0x7DEBDdfb8b6e11e0CEA3830e1196A69eb06083AF",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        }
      ],
      "name": "latest",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isApproved",
          "type": "bool"
        }
      ],
      "name": "setApproved",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "snapshotSlice",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "blockNumbers",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "valueAt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x5c174263e7b42c9928980a1eaeba3be3aff9f19aeaee194d3f1472bfccb4b94f",
  "receipt": {
    "to": null,
    "from": "0x672Bb635FFBea033e4b796Fbc054a1cAf009517A",
    "contractAddress": "0x7DEBDdfb8b6e11e0CEA3830e1196A69eb06083AF",
    "transactionIndex": 89,
    "gasUsed": "754395",
    "logsBloom": "0x
    "blockHash": "0x91f79be1d4cac82acdce69d763d71ca02fffa9b2da0f08af50185930af4f0d7e",
    "transactionHash": "0x5c174263e7b42c9928980a1eaeba3be3aff9f19aeaee194d3f1472bfccb4b94f",
    "logs": [
      {
        "transactionIndex": 89,
        "blockNumber": 14991071,
        "transactionHash": "0x5c174263e7b42c9928980a1eaeba3be3aff9f19aeaee194d3f1472bfccb4b94f",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000672bb635ffbea033e4b796fbc054a1caf009517a",
          "0x000000000000000000000000b79fad4ca981472442f53d16365fdf0305ffd8e9"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000002ae1e45fece000000000000000000000000000000000000000000000000000ddf7ca381e01800000000000000000000000000000000000000000000000100555655bc10bc4c760000000000000000000000000000000000000000000000000ddcce853be14a00000000000000000000000000000000000000000000000100555903da56bb1a76",
        "logIndex": 143,
        "blockHash": "0x91f79be1d4cac82acdce69d763d71ca02fffa9b2da0f08af50185930af4f0d7e"
      }
    ],
    "blockNumber": 14991071,
    "cumulativeGasUsed": "6782008",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "058c6ed15cd2a799578eee84d2e02cda",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"latest\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"name\":\"setApproved\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"snapshotSlice\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"blockNumbers\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"valueAt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KasumahValueLogger.sol\":\"KasumahValueLogger\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to array types.\\n */\\nlibrary Arrays {\\n   /**\\n     * @dev Searches a sorted `array` and returns the first index that contains\\n     * a value greater or equal to `element`. If no such index exists (i.e. all\\n     * values in the array are strictly less than `element`), the array length is\\n     * returned. Time complexity O(log n).\\n     *\\n     * `array` is expected to be sorted in ascending order, and to contain no\\n     * repeated elements.\\n     */\\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\\n        if (array.length == 0) {\\n            return 0;\\n        }\\n\\n        uint256 low = 0;\\n        uint256 high = array.length;\\n\\n        while (low < high) {\\n            uint256 mid = Math.average(low, high);\\n\\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\\n            // because Math.average rounds down (it does integer division with truncation).\\n            if (array[mid] > element) {\\n                high = mid;\\n            } else {\\n                low = mid + 1;\\n            }\\n        }\\n\\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\\n        if (low > 0 && array[low - 1] == element) {\\n            return low - 1;\\n        } else {\\n            return low;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x415faff3ea57601e0d5ebb1f02b0b808a302f8b661ff08d6b4a00c0ee00fa57e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow, so we distribute\\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\\n    }\\n}\\n\",\"keccak256\":\"0xa1477864def7febd9826918e50482a1ee7068b337b03804a7e0e98c674ac57c2\",\"license\":\"MIT\"},\"contracts/KasumahValueLogger.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@openzeppelin/contracts/utils/Arrays.sol\\\";\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract KasumahValueLogger  {\\n    using Arrays for uint256[];\\n\\n    mapping(address => mapping(address => bool)) private _approvals; // who is allowed to write for a user?\\n\\n    mapping(bytes32 => uint[]) private _keys; // hash of address/key -> snapshot\\n\\n    mapping(bytes32 => mapping(uint => bytes)) private _values;\\n\\n    function set(address user, string calldata key, bytes calldata value) public {\\n        requireApprovedSender(user);\\n        bytes32 hsh = hashKey(user, key);\\n        uint blockNumber = block.number;\\n        uint[] storage snapshots = _keys[hsh];\\n        require(snapshots.length == 0 || snapshots[snapshots.length - 1] < blockNumber, \\\"Key can only be set once per block\\\");\\n        // console.log('pushing: ', blockNumber);\\n        snapshots.push(blockNumber);\\n        _values[hsh][blockNumber] = value;\\n    }\\n\\n    function latest(address user, string calldata key) public view returns (bytes memory value) {\\n        return valueAt(user, key, block.number);\\n    }\\n\\n    function valueAt(address user, string calldata key, uint blockNumber) public view returns (bytes memory value) {\\n        bytes32 hsh = hashKey(user, key);\\n        uint closest = _keys[hsh].findUpperBound(blockNumber);\\n        uint[] storage snapshots = _keys[hsh];\\n        // console.log('bn, close', blockNumber, closest);\\n        if (closest == 0) {\\n            return _values[hsh][snapshots[0]];\\n        }\\n        if (closest == snapshots.length) {\\n            return _values[hsh][snapshots[closest - 1]];\\n        }\\n        uint snapID = snapshots[closest];\\n        if (snapID > blockNumber) {\\n            return _values[hsh][snapshots[closest - 1]];\\n        }\\n        return _values[hsh][snapID];\\n    }\\n\\n    function snapshotSlice(address user, string calldata key, uint start, uint length) public view returns (uint256[] memory blockNumbers) {\\n        uint[] storage snapshots = _keys[hashKey(user, key)];\\n        for (uint i = 0; i < length; i++) {\\n            blockNumbers[i] = snapshots[i + start];\\n        }\\n        return blockNumbers;\\n    }\\n\\n    function setApproved(address user, bool isApproved) public {\\n        _approvals[msg.sender][user] = isApproved;\\n    }\\n\\n    function requireApprovedSender(address user) internal view {\\n        require(user == msg.sender || _approvals[user][msg.sender], \\\"must be the user or have an approval to log\\\");\\n    }\\n\\n    function hashKey(address user, string calldata key) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(user, key));\\n    }\\n\\n}\\n\",\"keccak256\":\"0x2a4bf80745f870d66ba77bfe708130f2cc89cb0618b532c23a0234533f8c5a9a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610cb1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633f82973d1461005c57806352b7adde1461008557806384cfb6801461009a578063f4b59341146100de578063f4ca6451146100f1575b600080fd5b61006f61006a366004610955565b610111565b60405161007c9190610b4f565b60405180910390f35b6100986100933660046109a6565b610127565b005b6100986100a836600461091b565b336000908152602081815260408083206001600160a01b0395909516835293905291909120805460ff1916911515919091179055565b61006f6100ec366004610a24565b610233565b6101046100ff366004610a7c565b610565565b60405161007c9190610b0b565b606061011f84848443610233565b949350505050565b6101308561060f565b600061013d8686866106aa565b6000818152600160205260409020805491925043911580610196575080548290829061016b90600190610bce565b8154811061018957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154105b6101f25760405162461bcd60e51b815260206004820152602260248201527f4b65792063616e206f6e6c7920626520736574206f6e63652070657220626c6f604482015261636b60f01b60648201526084015b60405180910390fd5b8054600181018255600082815260208082209092018490558481526002825260408082208583529092522061022890868661081f565b505050505050505050565b606060006102428686866106aa565b60008181526001602052604081209192509061025e90856106e0565b60008381526001602052604090209091508161035657600260008481526020019081526020016000206000826000815481106102aa57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002080546102ce90610be5565b80601f01602080910402602001604051908101604052809291908181526020018280546102fa90610be5565b80156103475780601f1061031c57610100808354040283529160200191610347565b820191906000526020600020905b81548152906001019060200180831161032a57829003601f168201915b5050505050935050505061011f565b8054821415610398576000838152600260205260408120908261037a600186610bce565b815481106102aa57634e487b7160e01b600052603260045260246000fd5b60008183815481106103ba57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050858111156104b557600084815260026020526040812090836103ea600187610bce565b8154811061040857634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020805461042c90610be5565b80601f016020809104026020016040519081016040528092919081815260200182805461045890610be5565b80156104a55780601f1061047a576101008083540402835291602001916104a5565b820191906000526020600020905b81548152906001019060200180831161048857829003601f168201915b505050505094505050505061011f565b6000848152600260209081526040808320848452909152902080546104d990610be5565b80601f016020809104026020016040519081016040528092919081815260200182805461050590610be5565b80156105525780601f1061052757610100808354040283529160200191610552565b820191906000526020600020905b81548152906001019060200180831161053557829003601f168201915b5050505050945050505050949350505050565b60606000600160006105788989896106aa565b8152602001908152602001600020905060005b83811015610604578161059e8683610ba2565b815481106105bc57634e487b7160e01b600052603260045260246000fd5b90600052602060002001548382815181106105e757634e487b7160e01b600052603260045260246000fd5b6020908102919091010152806105fc81610c20565b91505061058b565b505095945050505050565b6001600160a01b03811633148061064757506001600160a01b03811660009081526020818152604080832033845290915290205460ff165b6106a75760405162461bcd60e51b815260206004820152602b60248201527f6d757374206265207468652075736572206f72206861766520616e206170707260448201526a6f76616c20746f206c6f6760a81b60648201526084016101e9565b50565b60008383836040516020016106c193929190610adf565b6040516020818303038152906040528051906020012090509392505050565b81546000906106f1575060006107bb565b82546000905b8082101561075b57600061070b83836107c1565b90508486828154811061072e57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154111561074757809150610755565b610752816001610ba2565b92505b506106f7565b60008211801561079e57508385610773600185610bce565b8154811061079157634e487b7160e01b600052603260045260246000fd5b9060005260206000200154145b156107b7576107ae600183610bce565b925050506107bb565b5090505b92915050565b600060026107cf8184610c3b565b6107da600286610c3b565b6107e49190610ba2565b6107ee9190610bba565b6107f9600284610bba565b610804600286610bba565b61080e9190610ba2565b6108189190610ba2565b9392505050565b82805461082b90610be5565b90600052602060002090601f01602090048101928261084d5760008555610893565b82601f106108665782800160ff19823516178555610893565b82800160010185558215610893579182015b82811115610893578235825591602001919060010190610878565b5061089f9291506108a3565b5090565b5b8082111561089f57600081556001016108a4565b80356001600160a01b03811681146108cf57600080fd5b919050565b60008083601f8401126108e5578182fd5b50813567ffffffffffffffff8111156108fc578182fd5b60208301915083602082850101111561091457600080fd5b9250929050565b6000806040838503121561092d578182fd5b610936836108b8565b91506020830135801515811461094a578182fd5b809150509250929050565b600080600060408486031215610969578081fd5b610972846108b8565b9250602084013567ffffffffffffffff81111561098d578182fd5b610999868287016108d4565b9497909650939450505050565b6000806000806000606086880312156109bd578081fd5b6109c6866108b8565b9450602086013567ffffffffffffffff808211156109e2578283fd5b6109ee89838a016108d4565b90965094506040880135915080821115610a06578283fd5b50610a13888289016108d4565b969995985093965092949392505050565b60008060008060608587031215610a39578384fd5b610a42856108b8565b9350602085013567ffffffffffffffff811115610a5d578384fd5b610a69878288016108d4565b9598909750949560400135949350505050565b600080600080600060808688031215610a93578081fd5b610a9c866108b8565b9450602086013567ffffffffffffffff811115610ab7578182fd5b610ac3888289016108d4565b9699909850959660408101359660609091013595509350505050565b6bffffffffffffffffffffffff198460601b168152818360148301376000910160140190815292915050565b6020808252825182820181905260009190848201906040850190845b81811015610b4357835183529284019291840191600101610b27565b50909695505050505050565b6000602080835283518082850152825b81811015610b7b57858101830151858201604001528201610b5f565b81811115610b8c5783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610bb557610bb5610c4f565b500190565b600082610bc957610bc9610c65565b500490565b600082821015610be057610be0610c4f565b500390565b600181811c90821680610bf957607f821691505b60208210811415610c1a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610c3457610c34610c4f565b5060010190565b600082610c4a57610c4a610c65565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea26469706673582212204166a9ba0577c5598c7945787f6e61018d9afcc88e41a12dccebf972682c7c9864736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80633f82973d1461005c57806352b7adde1461008557806384cfb6801461009a578063f4b59341146100de578063f4ca6451146100f1575b600080fd5b61006f61006a366004610955565b610111565b60405161007c9190610b4f565b60405180910390f35b6100986100933660046109a6565b610127565b005b6100986100a836600461091b565b336000908152602081815260408083206001600160a01b0395909516835293905291909120805460ff1916911515919091179055565b61006f6100ec366004610a24565b610233565b6101046100ff366004610a7c565b610565565b60405161007c9190610b0b565b606061011f84848443610233565b949350505050565b6101308561060f565b600061013d8686866106aa565b6000818152600160205260409020805491925043911580610196575080548290829061016b90600190610bce565b8154811061018957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154105b6101f25760405162461bcd60e51b815260206004820152602260248201527f4b65792063616e206f6e6c7920626520736574206f6e63652070657220626c6f604482015261636b60f01b60648201526084015b60405180910390fd5b8054600181018255600082815260208082209092018490558481526002825260408082208583529092522061022890868661081f565b505050505050505050565b606060006102428686866106aa565b60008181526001602052604081209192509061025e90856106e0565b60008381526001602052604090209091508161035657600260008481526020019081526020016000206000826000815481106102aa57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002080546102ce90610be5565b80601f01602080910402602001604051908101604052809291908181526020018280546102fa90610be5565b80156103475780601f1061031c57610100808354040283529160200191610347565b820191906000526020600020905b81548152906001019060200180831161032a57829003601f168201915b5050505050935050505061011f565b8054821415610398576000838152600260205260408120908261037a600186610bce565b815481106102aa57634e487b7160e01b600052603260045260246000fd5b60008183815481106103ba57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050858111156104b557600084815260026020526040812090836103ea600187610bce565b8154811061040857634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020805461042c90610be5565b80601f016020809104026020016040519081016040528092919081815260200182805461045890610be5565b80156104a55780601f1061047a576101008083540402835291602001916104a5565b820191906000526020600020905b81548152906001019060200180831161048857829003601f168201915b505050505094505050505061011f565b6000848152600260209081526040808320848452909152902080546104d990610be5565b80601f016020809104026020016040519081016040528092919081815260200182805461050590610be5565b80156105525780601f1061052757610100808354040283529160200191610552565b820191906000526020600020905b81548152906001019060200180831161053557829003601f168201915b5050505050945050505050949350505050565b60606000600160006105788989896106aa565b8152602001908152602001600020905060005b83811015610604578161059e8683610ba2565b815481106105bc57634e487b7160e01b600052603260045260246000fd5b90600052602060002001548382815181106105e757634e487b7160e01b600052603260045260246000fd5b6020908102919091010152806105fc81610c20565b91505061058b565b505095945050505050565b6001600160a01b03811633148061064757506001600160a01b03811660009081526020818152604080832033845290915290205460ff165b6106a75760405162461bcd60e51b815260206004820152602b60248201527f6d757374206265207468652075736572206f72206861766520616e206170707260448201526a6f76616c20746f206c6f6760a81b60648201526084016101e9565b50565b60008383836040516020016106c193929190610adf565b6040516020818303038152906040528051906020012090509392505050565b81546000906106f1575060006107bb565b82546000905b8082101561075b57600061070b83836107c1565b90508486828154811061072e57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154111561074757809150610755565b610752816001610ba2565b92505b506106f7565b60008211801561079e57508385610773600185610bce565b8154811061079157634e487b7160e01b600052603260045260246000fd5b9060005260206000200154145b156107b7576107ae600183610bce565b925050506107bb565b5090505b92915050565b600060026107cf8184610c3b565b6107da600286610c3b565b6107e49190610ba2565b6107ee9190610bba565b6107f9600284610bba565b610804600286610bba565b61080e9190610ba2565b6108189190610ba2565b9392505050565b82805461082b90610be5565b90600052602060002090601f01602090048101928261084d5760008555610893565b82601f106108665782800160ff19823516178555610893565b82800160010185558215610893579182015b82811115610893578235825591602001919060010190610878565b5061089f9291506108a3565b5090565b5b8082111561089f57600081556001016108a4565b80356001600160a01b03811681146108cf57600080fd5b919050565b60008083601f8401126108e5578182fd5b50813567ffffffffffffffff8111156108fc578182fd5b60208301915083602082850101111561091457600080fd5b9250929050565b6000806040838503121561092d578182fd5b610936836108b8565b91506020830135801515811461094a578182fd5b809150509250929050565b600080600060408486031215610969578081fd5b610972846108b8565b9250602084013567ffffffffffffffff81111561098d578182fd5b610999868287016108d4565b9497909650939450505050565b6000806000806000606086880312156109bd578081fd5b6109c6866108b8565b9450602086013567ffffffffffffffff808211156109e2578283fd5b6109ee89838a016108d4565b90965094506040880135915080821115610a06578283fd5b50610a13888289016108d4565b969995985093965092949392505050565b60008060008060608587031215610a39578384fd5b610a42856108b8565b9350602085013567ffffffffffffffff811115610a5d578384fd5b610a69878288016108d4565b9598909750949560400135949350505050565b600080600080600060808688031215610a93578081fd5b610a9c866108b8565b9450602086013567ffffffffffffffff811115610ab7578182fd5b610ac3888289016108d4565b9699909850959660408101359660609091013595509350505050565b6bffffffffffffffffffffffff198460601b168152818360148301376000910160140190815292915050565b6020808252825182820181905260009190848201906040850190845b81811015610b4357835183529284019291840191600101610b27565b50909695505050505050565b6000602080835283518082850152825b81811015610b7b57858101830151858201604001528201610b5f565b81811115610b8c5783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610bb557610bb5610c4f565b500190565b600082610bc957610bc9610c65565b500490565b600082821015610be057610be0610c4f565b500390565b600181811c90821680610bf957607f821691505b60208210811415610c1a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610c3457610c34610c4f565b5060010190565b600082610c4a57610c4a610c65565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea26469706673582212204166a9ba0577c5598c7945787f6e61018d9afcc88e41a12dccebf972682c7c9864736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 170,
        "contract": "contracts/KasumahValueLogger.sol:KasumahValueLogger",
        "label": "_approvals",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 175,
        "contract": "contracts/KasumahValueLogger.sol:KasumahValueLogger",
        "label": "_keys",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 181,
        "contract": "contracts/KasumahValueLogger.sol:KasumahValueLogger",
        "label": "_values",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_bytes32,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(uint256 => bytes))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bytes_storage)"
      },
      "t_mapping(t_uint256,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}